# This property doesn't change anything
env            test

# runtime.GOMAXPROCS
app.procs      4

# Secret - This should be long (60+ characters) and very random
secret EMPTY

# Note that app manifest is enabled even in development
static.cache   false
static.min     false
app.manifest   true
app.debug      true

# SHOULD ONLY BE ENABLED WHEN RUNNING TEST SUITE
# Disables some important features like automatic rsa key generation
# Enables /test route to run javascript tests
# Enables email address verification bypass required by tests
# To run tests, copy example.test.conf to test.conf and run with > go run *.go -conf test.conf
app.testing    true

# This is the directory where Bolt will create its databases
# You might want to store data outside the project directory
# This is particularly true if you are using a VM with NFS file sharing
# Accessing a Bolt database over NFS to the host system is guaranteed to cause database corruption
# app.data       /var/lib/teambo/test
app.data       _data/test

# Set dev.teambo.com to 127.0.0.1 in your hosts file to run the app locally
# You could use a generic SSL certificate but HTML Manifest requires a valid ssl certificate
app.host       dev.teambo.com
port.http      80
port.https     443
ssl.active     false
# ssl.crt        /etc/letsencrypt/live/dev.teambo.com/fullchain.pem
# ssl.key        /etc/letsencrypt/live/dev.teambo.com/privkey.pem

# Mailtrap.io is an awesome free Email Service Provider (ESP) for development environments
# Otherwise, enter SMTP details for your own ESP
smtp.host      mailtrap.io
smtp.port      465
smtp.user      __USER__
smtp.pass      __PASS__
smtp.from      noreply@teambo.com

# Feature flag for Remember Me checkbox on the login page
# Stores auth credentials in localStorage
# Probably won't ever be enabled on teambo.com due to heightened security considerations
# Might be enabled for desktop apps in the future (though again, probably not)
# app.remember_me true
app.remember_me false

# Feature flag for easier email address verification
# Stores auth credentials in localStorage so the user doesn't have to re-enter their password
# 	after clicking the link in the verificaiton email. Disabled due to questions over security
#   implications of storing auth credentials without any reliable expiration mechanism.
# app.easy_verification true
app.easy_verification false

# Account Authentication Throttling
# These parameters limit the number of times an account can be unsuccessfully authenticated
# Whenever 5 login attempts fail for a given email address within 24 hours, it gets locked
# Any accounts associated with that email address will be disallowed from authenticating
# This includes new account creation and any other actions which require negative authentication
# The account throttle may be reset 2 times every 24 hours by email address verification
acct.throttle.limit   6
acct.throttle.ttl     24
acct.throttle.resets  2

# Maximum number of teams that can be created by a single account
app.max_teams 3

# You can set HPKP keys but PLEASE BE CAREFUL
# Browsers enforce Public-Key-Pins without mercy
# You should always have 2 or more pins
# One should be your present SSL certificate
# The others can be your private key, a backup CSR, or your CA's root certificate
# You should do your own research online before enabling HPKP
# It's a good idea to start with Report-only to avoid bricking your domain
# ssl.hpkp       UTQtSCJljlXQqFVZoz40hJ8tLO+XJp9KsGrHIfkb0t8= 47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=
# ssl.hpkp.report_only true
